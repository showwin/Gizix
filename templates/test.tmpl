<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>WebSocket Sample</title>
    <script src="https://code.jquery.com/jquery-2.1.1.min.js"></script>
    <script type="text/javascript">
        // 接続先URI
        var uri = "ws://192.168.99.100:5000/ws";

        // WebSocketオブジェクト
        var webSocket = null;

        // 初期処理
        function init() {
            // ボタン押下イベント設定
            $("[data-name='message']").keypress(press);
            // 接続
            open();
        }

        // 接続
        function open() {
            if (webSocket == null) {
                // WebSocket の初期化
                webSocket = new WebSocket(uri);
                // イベントハンドラの設定
                webSocket.onopen = onOpen;
                webSocket.onmessage = onMessage;
                webSocket.onclose = onClose;
                webSocket.onerror = onError;
            }
        }

        // 接続イベント
        function onOpen(event) {
            chat("接続しました。");
        }

        // メッセージ受信イベント
        function onMessage(event) {
            if (event && event.data) {
                chat(event.data);
            }
        }

        // エラーイベント
        function onError(event) {
            //chat("エラーが発生しました。");
        }

        // 切断イベント
        function onClose(event) {
            chat("切断しました。3秒後に再接続します。(" + event.code + ")");
            webSocket = null;
            setTimeout("open()", 3000);
        }

        // キー押下時
        function press(event) {
            // キーがEnterか判定
            if (event && event.which == 13) {
                // メッセージ取得
                var message = $("[data-name='message']").val();
                // 存在チェック
                if (message && webSocket) {
                    // メッセージ送信
                    webSocket.send("" + message);
                    // メッセージ初期化
                    $("[data-name='message']").val("");
                }
            }
        }

        // チャットに表示
        function chat(message) {
            // 100件まで残す
            var chats = $("[data-name='chat']").find("div");
            while (chats.length >= 100) {
                chats = chats.last().remove();
            }
            // メッセージ表示
            var msgtag = $("<div>").text(message);
            $("[data-name='chat']").prepend(msgtag);
        }

        // 初期処理登録
        $(init);
    </script>
</head>
<body>
    <input type="text" data-name="message" size="100" />
    <hr />
    <div data-name="chat"></div>
</body>
</html>
